# Сложность O(log n) - логарифмическая сложность:
# Описание: Время выполнения алгоритма возрастает логарифмически с размером входных данных.
# Примеры: Бинарный поиск в отсортированном массиве, поиск элемента в сбалансированном двоичном дереве.

import math


def logarithmic_algo(n):
    i = 1
    while i < n:
        i *= 2
    return i


# Пример использования:
result = logarithmic_algo(10)
print(result)  # Вывод: 16
